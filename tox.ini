[main]
app_name = bsuos

[tox]
envlist =  test, mypy, coverage, pylint, docs
;py36

[testenv]
deps = -r{toxinidir}/requirements.txt
whitelist_externals = cmd

[testenv:test]
deps = {[testenv]deps}
       pytest
commands = pytest

[testenv:mypy]
description = Type Checks the code, runs in strict mode, ensures all code has type annotations.
deps = {[testenv]deps}
       mypy
commands = mypy "{toxinidir}/{[main]app_name}" --ignore-missing-imports --strict

[testenv:coverage]
commands = coverage erase
           cmd /C if exist htmlcov rmdir /S /Q htmlcov
           coverage run --branch --rcfile='{toxinidir}\coverage.ini'  __main__.py test
           coverage report --omit='.tox/*,venv/*,tests/' --rcfile='{toxinidir}\coverage.ini'
           coverage html --omit='.tox/*,venv/*,tests/' --rcfile='{toxinidir}\coverage.ini'
           ; cmd /C start htmlcov/index.html

[testenv:pylint]
description = scores the code's linting quality.
commands = pylint {[main]app_name}

[testenv:docs]
description = Invoke sphinx-build to build the HTML docs
commands = cmd /C if exist "{toxinidir}\docs\rst" rmdir /S /Q "{toxinidir}\docs\rst"
           sphinx-apidoc -f -o "{toxinidir}\docs\rst" "{toxinidir}/{[main]app_name}"
           docs\make.bat clean
           docs\make.bat html
           cmd /C echo Documentation can be found here: {toxinidir}\docs\_build\html\index.html
whitelist_externals = make.bat
                      cmd
