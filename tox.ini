[main]
app_name = bsuos

[tox]
skipsdist = True
envlist = test, mypy, pylint, docs


[testenv]
deps = -r{toxinidir}/requirements.txt

whitelist_externals = cmd
changedir = {toxinidir}
setenv =
    PYTHONPATH = {toxinidir}

[testenv:test]
deps = {[testenv]deps}
       pytest
       pytest-cov
commands = cmd /C if exist htmlcov rmdir /S /Q htmlcov
           pytest --cov-config coverage.ini --cov-report html --cov=bsuos tests/
           pytest --cov-config coverage.ini --cov=bsuos tests/
           cmd /C start htmlcov/index.html

[testenv:mypy]
description = Type Checks the code, runs in strict mode, ensures all code has type annotations.
deps = {[testenv]deps}
       mypy
commands = mypy "{toxinidir}/{[main]app_name}" --ignore-missing-imports --strict

;[testenv:coverage]
;commands =
;           coverage erase
;           coverage run --branch --rcfile='{toxinidir}\coverage.ini' __main__.py test
;           coverage report --omit='.tox/*,venv/*,tests/' --rcfile='{toxinidir}\coverage.ini'
;           coverage html --omit='.tox/*,venv/*,tests/' --rcfile='{toxinidir}\coverage.ini'
;           ;cmd /C start htmlcov/index.html

[testenv:pylint]
description = scores the code's linting quality.
commands = black {[main]app_name}
           pylint {[main]app_name}

[testenv:docs]
description = Invoke sphinx-build to build the HTML docs
commands = cmd /C if exist "{toxinidir}\docs\rst" rmdir /S /Q "{toxinidir}\docs\rst"
           sphinx-apidoc -f -o "{toxinidir}\docs\rst" "{toxinidir}/{[main]app_name}"
           docs\make.bat clean
           docs\make.bat html
           cmd /C echo Documentation can be found here: {toxinidir}\docs\_build\html\index.html
           cmd /C start docs\_build\html\index.html
whitelist_externals = make.bat
                      cmd
